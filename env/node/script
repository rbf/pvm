#!/bin/zsh

__PVM_SECONDARY_NAME="npm"
__PVM_PORT="3000"

__PVM_IMP_GET_STARTED_URL='https://nodejs.org/en/docs/guides/getting-started-guide/'

__PVM_IMP_HOW_TO_HELLO_WORLD_LINES+=("echo 'console.log(\"<<HELLOWORLDTEXT>>\")' > hello_world.js")
__PVM_IMP_HOW_TO_HELLO_WORLD_LINES+=("node hello_world.js")

function __pvm_imp_after_docker_dev_img_start() {
  if ! [ -f "${__PVM_HOST_USER_CONFIG_DIR_FULL_PATH}/.node/bin/npm" ]; then
    if [ -d "${__PVM_HOST_USER_CONFIG_DIR_FULL_PATH}/.node" ]; then
      __pvm_echo_error "'${__PVM_HOST_USER_CONFIG_DIR_FULL_PATH}/.node' directory is present but 'npm' executable is missing. Something went wrong. Exit and relaunch the env setup."
      return 1
    fi
    print "Copying preinstalled node dependencies and tools into '.node' dir..."
    __pvm_docker_dev_img_exec mkdir -p "${__PVM_CONTAINER_USER_CONFIG_DIR_FULL_PATH}"
    __pvm_docker_dev_img_exec cp -R /home/preinstalled-node-prefix/ "${__PVM_CONTAINER_USER_CONFIG_DIR_FULL_PATH}/.node"
    print
  fi

  if [ "${__PVM_HOST_OS}" = "darwin" ]; then
    local electron_macos_binary="${__PVM_HOST_USER_CONFIG_DIR_FULL_PATH}/.node/lib/node_modules/electron/dist/Electron.app/Contents/MacOS/Electron"
    if ! [ -f "${electron_macos_binary}" ]; then
      print "Installing macOS version of the electron app runner."
      # SOURCE: 22nov2021 https://github.com/electron/electron/issues/17972#issuecomment-958110165
      # SOURCE: 22nov2021 https://jaked.org/blog/2021-02-18-How-to-run-Electron-on-Linux-on-Docker-on-Mac
      # SOURCE: 22nov2021 https://calbertts.medium.com/developing-electron-apps-in-macos-afd21b4a59e3
      # SOURCE: 22nov2021 https://trigodev.com/blog/develop-electron-in-docker
      # SOURCE: 22nov2021 https://gist.github.com/paul-krohn/e45f96181b1cf5e536325d1bdee6c949
      __pvm_docker_dev_img_exec env npm_config_platform=darwin npm install --global electron
      print
    fi
    alias electron="${electron_macos_binary}"
    print "Note that if you are building an electron app it is not trivial to run it from inside the" \
          "${__PVM_TOOL_NAME} container back on macOS. As a workaround, use the alias 'electron .'" \
          "instead of your usual way, e.g. 'npm start'."
    print
  fi
}

function __pvm_before_env_reset() {
  unalias electron
}

__PVM_IMP_COMMANDS_TO_RUN_AT_THE_END+=('node --version')
__PVM_IMP_COMMANDS_TO_RUN_AT_THE_END+=('npm --version')
__PVM_IMP_COMMANDS_TO_RUN_AT_THE_END+=('npx nodemon --version')
__PVM_IMP_COMMANDS_TO_RUN_AT_THE_END+=('npx eslint --version')
__PVM_IMP_COMMANDS_TO_RUN_AT_THE_END+=('yarn --version')

__PVM_IMP_ALIASES[node]='node'
__PVM_IMP_ALIASES[npm]='npm'
__PVM_IMP_ALIASES[npx]='npx'
__PVM_IMP_ALIASES[yarn]='yarn'
